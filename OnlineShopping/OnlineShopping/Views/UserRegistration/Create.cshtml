@model OnlineShopping.Models.DB.tbl_User_Registration

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery-1.10.2.intellisense.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/Validations.js"></script>
<script>
    $(document).ready(function () {
        $("#CountryName").change(function () {
            var CountryName = $('#CountryName').val();
            $("#StateName").empty();
            $.ajax({
                url: '/UserRegistration/State',
                type: 'get',
                datatype: JSON,
                data: { CountryName: CountryName },
                success: function (listname) {
                    $('#StateName').append("<option value='0'>Please Enter</option>");
                    $.each(listname, function (index, value) {
                        $('#StateName').append('<option value="' + value.StateID + '">' + value.StateName + '</option>');
                    })
                }
            })
        })
    });

    $(document).ready(function () {
        $("#StateName").change(function () {
            var StateName = $('#StateName').val();
            $("#CityName").empty();

            $.ajax({
                url: '/UserRegistration/City',
                type: 'get',
                datatype: JSON,
                data: { StateName: StateName },
                success: function (listnames) {
                    $('#CityName').append('<option value=0>please enter City</option>"');
                    $.each(listnames, function (idex, value) {
                        $('#CityName').append('<option value="' + value.CityID + '">' + value.CityName + '<option>');
                    })
                }
            })
        })
    })
</script>

@using (Html.BeginForm("Create","UserRegistration",FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
  
    <div class="form-horizontal">
        <h4>UserRegistration Form</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control",id="firstname" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                <label id="txterror1" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control",id="lastname" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                <label id="txterror2" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control",id="middlename" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                <label id="txterror3" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control",id="emailid" } })
                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                <label id="txterror4" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control",id="password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                <label id="txterror5" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control",id="gender" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                <label id="txterror6" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control",id="mobilenumber" } })
                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                <label id="txterror7" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CountryName", ViewBag.Country as SelectList, "Please Select Country", new { @class = "form-control", id = "CountryName" })
                <label id="txterror8" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StateName", new SelectList(string.Empty, "StateID", "StateName"), "Please select State", new { @class = "form-control", id = "StateName" })
                <label id="txterror9" class="text-danger"></label>
                @*@Html.EditorFor(model => model.StateName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StateName, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CityName", new SelectList(string.Empty, "CityID", "CityName"), "Please Select City", new { @class = "form-control", id = "CityName" })
                <label id="txterror10" class="text-danger"></label>
                @*@Html.EditorFor(model => model.CityName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CityName, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control",id="address1" } })
                @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                <label id="txterror11" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control",id="address2" } })
                @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                <label id="txterror12" class="text-danger"></label>
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" id="Submit" />
            </div>
        </div>
    </div>
}

<div>
    <input type="button" value="New Login" class="btn btn-success" onclick="location.href='@Url.Action("Login", "LoginPage")'">
</div>
